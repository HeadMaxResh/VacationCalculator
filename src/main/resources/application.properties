server.port=8081

spring.application.name=user-profile-service

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

logging.pattern.console=%C{1.} [%-5level] %d{HH:mm:ss} - %msg%n

eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${server.port}}

spring.h2.console.enabled                  = true
spring.h2.console.path                     = /h2-console

spring.datasource.url                      = jdbc:postgresql://194.0.194.248:5432/mydatabase
spring.datasource.username                 = admin
spring.datasource.password                 = t1password
spring.datasource.driver-class-name        = org.postgresql.Driver

spring.datasource.hikari.maximum-pool-size = 10
spring.datasource.hikari.minimum-idle      = 5

spring.jpa.database-platform               = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto              = update

spring.jpa.properties.hibernate.dialect    = org.hibernate.dialect.PostgreSQLDialect

spring.thymeleaf.prefix                    = classpath:/templates/
spring.thymeleaf.suffix                    = .html
spring.thymeleaf.mode                      = HTML
spring.thymeleaf.cache                     = false

spring.jpa.show-sql                        = true
spring.jpa.properties.hibernate.format_sql = true


app.jwtSecret                              = IWwEgCRPjQzqFslIEAr4a6CSYFJqM8U/asBZOrQkIDBd55h+ZT6obZ5YyDnqdLzRN+im9a1uiIJqy/9Ht3rAHQ==
app.jwtExpirationInMs                      = 604800000

spring.redis.host=194.0.194.248
spring.redis.port=6379

# ????????? Spring Boot ???????????? CORS-??????? ?? ?????????? ??????
spring.web.cors.allowed-origin-patterns=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE
spring.web.cors.allow-credentials=true


spring.kafka.bootstrap-servers=194.0.194.248:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.group-id=user-profile-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

app.photo.storage.path=uploads/photos